Starting: Intent { cmp=com.thingsbook.it/.MainActivity (has extras) }
WARNING: The shell running this script isnt bash.  Although we try to avoid bashism in scripts, things can happen.
/home/bigt/bin/android-ndk-r9d/ndk-gdb: 143: /home/bigt/bin/android-ndk-r9d/ndk-gdb: Bad substitution
/home/bigt/bin/android-ndk-r9d/ndk-gdb: 555: [: 1: unexpected operator
/home/bigt/bin/android-ndk-r9d/ndk-gdb: 771: [: armeabi: unexpected operator
GNU gdb (GDB) 7.3.1-gg2
Copyright (C) 2011 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=x86_64-linux-gnu --target=arm-linux-android".
For bug reporting instructions, please see:
<http://source.android.com/source/report-bugs.html>.
warning: Could not load shared library symbols for 76 libraries, e.g. libstdc++.so.
Use the "info sharedlibrary" command to see the complete listing.
Do you need "set solib-search-path" or "set sysroot"?
warning: Breakpoint address adjusted from 0x400dea53 to 0x400dea52.
0x407ced48 in ?? ()
(gdb) b git_futils_mktmp
Function "git_futils_mktmp" not defined.
Make breakpoint pending on future shared library load? (y or [n]) y
Breakpoint 1 (git_futils_mktmp) pending.
(gdb) c
Continuing.

Breakpoint 1, git_futils_mktmp (path_out=0x0, filename=0x0, mode=21849) at /home/bigt/thesis/app/libs-source/libgit2/src/fileops.c:23
23	{
(gdb) lis
18			file_path, NULL, mode,
19			GIT_MKDIR_PATH | GIT_MKDIR_SKIP_LAST | GIT_MKDIR_VERIFY_DIR);
20	}
21	
22	int git_futils_mktmp(git_buf *path_out, const char *filename, mode_t mode)
23	{
24		int fd;
25		mode_t mask;
26	
27		p_umask(mask = p_umask(0));
27		p_umask(mask = p_umask(0));
(gdb) list mask
20	}
21	
22	int git_futils_mktmp(git_buf *path_out, const char *filename, mode_t mode)
23	{
24		int fd;
25		mode_t mask;
26	
27		p_umask(mask = p_umask(0));
28	
29		git_buf_sets(path_out, filename);
(gdb) print mask
$1 = 21843
29		git_buf_sets(path_out, filename);
30		git_buf_puts(path_out, "_git2_XXXXXX");
32		if (git_buf_oom(path_out))
35		if ((fd = p_mkstemp(path_out->ptr)) < 0) {
41		if (p_chmod(path_out->ptr, (mode & ~mask))) {
47		return fd;
48	}
are_symlinks_supported (wd_path=0x52d2a7a8 "/storage/sdcard0/it/ptt/") at /home/bigt/thesis/app/libs-source/libgit2/src/repository.c:865
865			p_close(fd) < 0 ||
866			p_unlink(path.ptr) < 0 ||
867			p_symlink("testing", path.ptr) < 0 ||
869			symlinks_supported = false;
873		(void)p_unlink(path.ptr);
874		git_buf_free(&path);
876		return symlinks_supported;
repo_init_fs_configs (cfg=0x52a8a150, cfg_path=0x514d2ef0 "/storage/sdcard0/it/ptt/.git/config", repo_dir=0x52a8a118 "/storage/sdcard0/it/ptt/.git/", 
    work_dir=0x52d2a7a8 "/storage/sdcard0/it/ptt/", update_ignorecase=true) at /home/bigt/thesis/app/libs-source/libgit2/src/repository.c:1007
1007			if ((error = git_config_set_bool(cfg, "core.symlinks", false)) < 0)
1009		} else if (git_config_delete_entry(cfg, "core.symlinks") < 0)
1012		if (update_ignorecase) {
1013			if (is_filesystem_case_insensitive(repo_dir)) {
1014				if ((error = git_config_set_bool(cfg, "core.ignorecase", true)) < 0)
1016			} else if (git_config_delete_entry(cfg, "core.ignorecase") < 0)
1027		return 0;
1028	}
repo_init_config (repo_dir=0x52a8a118 "/storage/sdcard0/it/ptt/.git/", work_dir=0x52d2a7a8 "/storage/sdcard0/it/ptt/", flags=196624, mode=0)
    at /home/bigt/thesis/app/libs-source/libgit2/src/repository.c:1059
1059		if (!is_bare) {
1060			SET_REPO_CONFIG(bool, "core.logallrefupdates", true);
1062			if (!(flags & GIT_REPOSITORY_INIT__NATURAL_WD))
1064			else if (is_reinit) {
1070		if (mode == GIT_REPOSITORY_INIT_SHARED_GROUP) {
1074		else if (mode == GIT_REPOSITORY_INIT_SHARED_ALL) {
1080		git_buf_free(&cfg_path);

1081		git_config_free(config);
(gdb) 
1083		return error;
git_repository_init_ext (out=0xbec2c490, given_repo=0x514d2ed0 "/storage/sdcard0/it/ptt", opts=0xbec2c378)
    at /home/bigt/thesis/app/libs-source/libgit2/src/repository.c:1518
1518				error = repo_init_create_head(
1521		if (error < 0)
1524		error = git_repository_open(out, repo_path.ptr);
1526		if (!error && opts->origin_url)
1530		git_buf_free(&repo_path);
1531		git_buf_free(&wd_path);
1533		return error;
1534	}
git_clone (out=0xbec2c4d0, url=0x52918428 "https://github.com/biggestT/project-time-tracker.git", local_path=0x514d2ed0 "/storage/sdcard0/it/ptt", _options=0x0)
    at /home/bigt/thesis/app/libs-source/libgit2/src/clone.c:425
425		if (!(error = create_and_configure_origin(&origin, repo, url, &options))) {
426			error = git_clone_into(

Breakpoint 1, git_futils_mktmp (path_out=0x512f62bc, filename=0x51305f10 "/storage/sdcard0/it/ptt/.git/objects/pack/pack", mode=0)
    at /home/bigt/thesis/app/libs-source/libgit2/src/fileops.c:23
23	{
27		p_umask(mask = p_umask(0));
29		git_buf_sets(path_out, filename);
30		git_buf_puts(path_out, "_git2_XXXXXX");
32		if (git_buf_oom(path_out))
35		if ((fd = p_mkstemp(path_out->ptr)) < 0) {
41		if (p_chmod(path_out->ptr, (mode & ~mask))) {
47		return fd;
48	}
git_filebuf_open (file=0x512f62bc, path=0x51305f10 "/storage/sdcard0/it/ptt/.git/objects/pack/pack", flags=48, mode=292)
    at /home/bigt/thesis/app/libs-source/libgit2/src/filebuf.c:256
256			if (file->fd < 0) {
260			file->fd_is_open = true;
263			file->path_original = NULL;
264			file->path_lock = git_buf_detach(&tmp_path);
265			GITERR_CHECK_ALLOC(file->path_lock);
266		} else {
285		return 0;
290	}
git_indexer_new (out=0x51306da8, prefix=0x51306f40 "/storage/sdcard0/it/ptt/.git/objects/pack", mode=0, odb=0x51306db8, progress_cb=0, progress_payload=0x0)
    at /home/bigt/thesis/app/libs-source/libgit2/src/indexer.c:146
146		git_buf_free(&path);
147		if (error < 0)
150		*out = idx;
151		return 0;
pack_backend__writepack (out=0xbec2c234, _backend=0x51306ec0, odb=0x51306db8, progress_cb=0, progress_payload=0x0)
    at /home/bigt/thesis/app/libs-source/libgit2/src/odb_pack.c:587
587		writepack->parent.backend = _backend;
588		writepack->parent.append = pack_backend__writepack_append;
589		writepack->parent.commit = pack_backend__writepack_commit;n
Undefined command: "nn".  Try "help".
590		writepack->parent.free = pack_backend__writepack_free;
592		*out = (git_odb_writepack *)writepack;
594		return 0;
git_odb_write_pack (out=0xbec2c234, db=0x51306db8, progress_cb=0, progress_payload=0x0) at /home/bigt/thesis/app/libs-source/libgit2/src/odb.c:1061
1061		for (i = 0; i < db->backends.length && error < 0; ++i) {
1075		if (error == GIT_PASSTHROUGH)
1077		if (error < 0 && !writes)
1080		return error;
git_smart__download_pack (transport=0x5165fea0, repo=0x51870768, stats=0x52d9d72c, progress_cb=0, progress_payload=0x0)
    at /home/bigt/thesis/app/libs-source/libgit2/src/transports/smart_protocol.c:515
515		if (!t->caps.side_band && !t->caps.side_band_64k) {
524			if (t->cancelled.val) {
530			if ((error = recv_pkt(&pkt, buf)) < 0)
534			if (t->cancelled.val) {
540			if (pkt->type == GIT_PKT_PROGRESS) {
541				if (t->progress_cb) {
547				git__free(pkt);
548			} else if (pkt->type == GIT_PKT_DATA) {
560		} while (1);
524			if (t->cancelled.val) {
530			if ((error = recv_pkt(&pkt, buf)) < 0)
534			if (t->cancelled.val) {
540			if (pkt->type == GIT_PKT_PROGRESS) {
548			} else if (pkt->type == GIT_PKT_DATA) {
549				git_pkt_data *p = (git_pkt_data *) pkt;
550				error = writepack->append(writepack, p->data, p->len, stats);
552				git__free(pkt);
553				if (error != 0)
555			} else if (pkt->type == GIT_PKT_FLUSH) {
560		} while (1);
524			if (t->cancelled.val) {
530			if ((error = recv_pkt(&pkt, buf)) < 0)
534			if (t->cancelled.val) {
540			if (pkt->type == GIT_PKT_PROGRESS) {
548			} else if (pkt->type == GIT_PKT_DATA) {
549				git_pkt_data *p = (git_pkt_data *) pkt;
550				error = writepack->append(writepack, p->data, p->len, stats);
552				git__free(pkt);
553				if (error != 0)
555			} else if (pkt->type == GIT_PKT_FLUSH) {
560		} while (1);
524			if (t->cancelled.val) {
530			if ((error = recv_pkt(&pkt, buf)) < 0)
534			if (t->cancelled.val) {
540			if (pkt->type == GIT_PKT_PROGRESS) {
541				if (t->progress_cb) {
547				git__free(pkt);
548			} else if (pkt->type == GIT_PKT_DATA) {
560		} while (1);
524			if (t->cancelled.val) {
530			if ((error = recv_pkt(&pkt, buf)) < 0)
534			if (t->cancelled.val) {
540			if (pkt->type == GIT_PKT_PROGRESS) {
548			} else if (pkt->type == GIT_PKT_DATA) {
555			} else if (pkt->type == GIT_PKT_FLUSH) {
557				git__free(pkt);
558				break;
571		if (npp.callback && npp.stats->received_bytes > npp.last_fired_bytes) {
577		error = writepack->commit(writepack, stats);
580		if (writepack)
581			writepack->free(writepack);
582		if (progress_cb) {
587		return error;
git_fetch_download_pack (remote=0x52d9d6c0) at /home/bigt/thesis/app/libs-source/libgit2/src/fetch.c:139
139	}
git_remote_download (remote=0x52d9d6c0) at /home/bigt/thesis/app/libs-source/libgit2/src/remote.c:830
830	}
git_remote_fetch (remote=0x52d9d6c0, signature=0x0, reflog_message=0x51f57b18 "clone: from https://github.com/biggestT/project-time-tracker.git")
    at /home/bigt/thesis/app/libs-source/libgit2/src/remote.c:847
847		git_remote_disconnect(remote);
850		if (error != 0)
854		if (reflog_message)
855			git_buf_sets(&reflog_msg_buf, reflog_message);
862		error = git_remote_update_tips(remote, signature, git_buf_cstr(&reflog_msg_buf));
863		git_buf_free(&reflog_msg_buf);
864		return error;
865	}
git_clone_into (repo=0x51870768, remote=0x52d9d6c0, co_opts=0xbec2c414, branch=0x0, signature=0x0) at /home/bigt/thesis/app/libs-source/libgit2/src/clone.c:366
		if (branch)
			error = update_head_to_remote(repo, remote, signature, git_buf_cstr(&reflog_message));
		if (!error && should_checkout(repo, git_repository_is_bare(repo), co_opts))
			error = git_checkout_head(repo, co_opts);

Program received signal SIGBUS, Bus error.
0xffff0fc0 in ?? ()
(gdb) 
